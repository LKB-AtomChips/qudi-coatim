global:
  startup_modules: []
  remote_modules_server: null
  namespace_server_port: 18861
  force_remote_calls_by_value: true
  hide_manager_window: false
  stylesheet: qdark.qss
  daily_data_dirs: true
  default_data_dir: null
  extension_paths: []

hardware:
  # Simulated camera (replace with guppypro.GuppyPro or vimba driver)
  camera_stub:
    module.Class: 'qudi.hardware.camera.camera_stub.CameraStub'
    options: {}

logic:
  # ROI + normalization + crosshair logic
  display_logic:
    module.Class: 'coatim.logic.DisplayLogicModule'

  # Frequency scan + fitting logic
  analysis_logic:
    module.Class: 'coatim.logic.AnalysisLogicModule'

  # Wrapper logic for simulated/hardware camera
  camera_logic:
    module.Class: 'coatim.logic.CameraLogicModule'
    connect:
      # If you use a real hardware module instead of stub:
      # camera: detection2
      # For now, just runs standalone
      {}

gui:
  absorption:
    module.Class: 'coatim.gui.absorption_gui.AbsorptionGui'
    connect:
      display_logic: 'display_logic'
      camera_logic: 'camera_logic'
      analysis_logic: 'analysis_logic'

  image_display:
    module.Class: 'coatim.gui.image_display.ImageDisplayGuiModule'
    connect:
      display_logic: 'display_logic'

  analysis:
    module.Class: 'coatim.gui.analysis_gui.AnalysisGuiModule'
    connect:
      analysis_logic: 'analysis_logic'
